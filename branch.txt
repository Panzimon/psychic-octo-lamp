git encourages people to use branch frequently ~ 

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支： git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

当Git无法自动合并分支，也就是两边都同时改了同一个文件的时候，他
会在不同的地方提示，你需要按照自己需要，解决掉冲突。解决冲突之后，再提交，合并完成，最后删掉那个分支。

用git log --gragh[ --pretty=oneline --abbrev-commit]命令可以看到分支合并图(简略显示)。

修改bug时，我们会通过新的bug分支进行修复，然后合并再删除。

如果本来在typing一个file，但是没有完成，先把现场git stash一下，
再去修改bug，修复完再git stash pop或者先git stash apply then gitstash drop，回到刚刚的现场。刚刚自己试验了一下，好像如果自己没有git add typing的那个file的话，git stash之后看git status还有那个
没有git add的东西。不过刚刚没有好好控制变量，再改完那个所谓的bug之后，我就add并且commmit了那个本来typing的文件。。。不过应该是要先add的，以后有机会应该还会遇到这种情况的，到时候再试试看~

如果新建的branch没有合并，但是已经没用了，想删掉的话就不能用git branch -d <name>了，-d => -D 才可以强行删除，不然会销毁失败，
→error: The branch '???' is not fully merged.
If you are sure you want to delete it, run 'git branch -D '???'.

如果是多人协作的话~
1.首先，先试图用git push origin branch-name推送自己的修改
2.如果推送失败，则因为远程分支比你的本地更新(譬如说你的小伙伴先改完upload到GitHub了，而你是后来up的~)，需要先用git pull试图合并；
3.如果合并有冲突，则解决冲突(也就是之前说过的，merge的时候失败，看status，然后根据提示改改那个冲突的文件)，并在本地提交；
4.如果没有冲突或者说解决掉冲突后，在用git push origin branch-name推送，就能成功了~

如果说git pull时提示说“no tracking infomation”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name 即可。

查看远程库信息，git remote -v；

本地和远程的分支名称最好一致~
